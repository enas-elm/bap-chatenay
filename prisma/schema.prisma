// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  nom           String?
  prenom        String?
  phone         String?
  birthdate     String?
  job           String?
  formResponses FormResponse[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model FormResponse {
  id                                Int                                @id @default(autoincrement())
  userId                            Int
  user                              User                               @relation(fields: [userId], references: [id])
  horairesDeTravail                 HorairesDeTravail?
  effortMental                      EffortMental?
  effortPhysique                    EffortPhysique?
  environnement                     Environnement?
  satisfactionEtEvolutionDeCarriere SatisfactionEtEvolutionDeCarriere?
  labels                            labels?
  status                            statuses?
  priority                          priorities?
  createdAt                         DateTime                           @default(now())
  updatedAt                         DateTime                           @updatedAt
}

model HorairesDeTravail {
  id                    Int          @id @default(autoincrement())
  heuresSupplementaires String?
  heuresTravailSemaine  String?
  horairesIrreguliers   String?
  moyenDeTransport      String?
  tempsTrajet           String?
  formResponse          FormResponse @relation(fields: [formResponseId], references: [id])
  formResponseId        Int          @unique
  createdAt             DateTime     @default(now())
  updatedAt             DateTime     @updatedAt
}

model EffortMental {
  id                             Int          @id @default(autoincrement())
  fatigueMentaleOuStress         String?
  forteConcentrationRequise      String?
  impactNegatifSurViePersonnelle String?
  formResponse                   FormResponse @relation(fields: [formResponseId], references: [id])
  formResponseId                 Int          @unique
  createdAt                      DateTime     @default(now())
  updatedAt                      DateTime     @updatedAt
}

model EffortPhysique {
  id                              Int          @id @default(autoincrement())
  deplacementsFrequents           String?
  expositionRisquesPhysiques      String?
  positionStatique                String?
  problemesPhysiquesLiesAuTravail String?
  travailRepetitif                String?
  formResponse                    FormResponse @relation(fields: [formResponseId], references: [id])
  formResponseId                  Int          @unique
  createdAt                       DateTime     @default(now())
  updatedAt                       DateTime     @updatedAt
}

model Environnement {
  id                         Int          @id @default(autoincrement())
  espaceDeTravailInadapte    String?
  expositionProduitsToxiques String?
  expositionVibrations       String?
  formResponse               FormResponse @relation(fields: [formResponseId], references: [id])
  formResponseId             Int          @unique
  createdAt                  DateTime     @default(now())
  updatedAt                  DateTime     @updatedAt
}

model SatisfactionEtEvolutionDeCarriere {
  id                               Int          @id @default(autoincrement())
  motivationPourTachesQuotidiennes String?
  optionsReconversion              String?
  possibiliteEvolutionCarriere     String?
  satisfactionTravail              String?
  formResponse                     FormResponse @relation(fields: [formResponseId], references: [id])
  formResponseId                   Int          @unique
  createdAt                        DateTime     @default(now())
  updatedAt                        DateTime     @updatedAt
}

model labels {
  id             Int          @id @default(autoincrement())
  formResponseId Int          @unique
  value          String       @unique
  label          String
  formResponse   FormResponse @relation(fields: [formResponseId], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model statuses {
  id             Int          @id @default(autoincrement())
  formResponseId Int          @unique
  value          String       @unique
  label          String
  formResponse   FormResponse @relation(fields: [formResponseId], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model priorities {
  id             Int          @id @default(autoincrement())
  formResponseId Int          @unique
  value          String       @unique
  label          String
  formResponse   FormResponse @relation(fields: [formResponseId], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}
